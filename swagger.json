{
  "openapi": "3.0.3",
  "info": {
    "title": "KNUST Chatbot API - Enhanced Version",
    "description": "Enhanced API for KNUST admission chatbot with fuzzy search, dataset-scoped responses, and intelligent program matching. This API provides accurate admission information including cut-offs, fees, requirements, and eligibility checking.\n\n## 🚀 New Features\n\n### Dataset-Only Responses\n- All admission-related queries use only official KNUST data\n- No external university information or general knowledge\n- Accurate cut-offs, fees, and requirements\n\n### Fuzzy Search\n- Intelligent program name matching\n- Handles typos and partial names\n- Automatic program suggestions\n\n### Enhanced Chat Experience\n- Eligibility checking based on SHS background\n- Similar program recommendations\n- Auto-append admission requirements\n- Hardcoded responses for non-admission queries\n\n### Testing & Debugging\n- Fuzzy search test endpoint\n- Query classification testing\n- Development-friendly features",
    "version": "2.0.0",
    "contact": {
      "name": "Rockson Agyamaku",
      "email": "support@knustchatbot.com"
    }
  },
  "servers": [
    {
      "url": "https://knust-chat-bot-backend.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": ["error"]
      },
      "User": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Unique user ID"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "required": ["uid", "message"]
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Unique user ID"
          },
          "customToken": {
            "type": "string",
            "description": "Custom token for Firebase authentication"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "required": ["uid", "customToken", "message"]
      },
      "Program": {
        "type": "object",
        "properties": {
          "docId": {
            "type": "string",
            "description": "Document ID in Firestore"
          },
          "name": {
            "type": "string",
            "description": "Program name"
          },
          "college": {
            "type": "string",
            "description": "College offering the program"
          },
          "stream": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Program streams (e.g., regular, fee_paying)"
          },
          "coreRequirements": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Core subject requirements"
          },
          "electiveRequirementsStructured": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["required", "choice"]
                },
                "subject": {
                  "type": "string",
                  "nullable": true
                },
                "options": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true
                },
                "note": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "electiveRequirements": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Flat list of elective requirements"
          },
          "electivesCount": {
            "type": "integer",
            "description": "Number of electives required"
          },
          "cutoffs": {
            "type": "object",
            "properties": {
              "male": {
                "type": "string",
                "description": "Cut-off for male applicants"
              },
              "female": {
                "type": "string",
                "description": "Cut-off for female applicants"
              }
            }
          },
          "cutoffSource": {
            "type": "string",
            "description": "Source of cut-off data"
          },
          "fees": {
            "type": "object",
            "properties": {
              "regular_freshers": {
                "type": "number",
                "description": "Fees for regular freshers"
              },
              "fee_paying_freshers": {
                "type": "number",
                "description": "Fees for fee-paying freshers"
              },
              "residential_freshers": {
                "type": "number",
                "description": "Fees for residential freshers"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Program creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Program update timestamp"
          }
        },
        "required": ["name", "college", "stream", "coreRequirements", "electiveRequirementsStructured", "cutoffs", "fees"]
      },
      "Grades": {
        "type": "object",
        "properties": {
          "english": {
            "type": "string",
            "enum": ["A1", "B2", "B3", "C4", "C5", "C6", "D7", "E8", "F9"]
          },
          "math": {
            "type": "string",
            "enum": ["A1", "B2", "B3", "C4", "C5", "C6", "D7", "E8", "F9"]
          },
          "integratedScience": {
            "type": "string",
            "enum": ["A1", "B2", "B3", "C4", "C5", "C6", "D7", "E8", "F9"]
          },
          "electives": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "subject": {
                  "type": "string"
                },
                "grade": {
                  "type": "string",
                  "enum": ["A1", "B2", "B3", "C4", "C5", "C6", "D7", "E8", "F9"]
                }
              }
            }
          }
        },
        "required": ["english", "math", "integratedScience", "electives"]
      },
      "Recommendation": {
        "type": "object",
        "properties": {
          "aggregate": {
            "type": "integer",
            "description": "Calculated aggregate score"
          },
          "recommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Program"
            },
            "description": "Recommended programs"
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Any warnings about the recommendations"
          }
        },
        "required": ["aggregate", "recommendations"]
      },
      "FAQ": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "FAQ document ID"
          },
          "question": {
            "type": "string",
            "description": "FAQ question"
          },
          "answer": {
            "type": "string",
            "description": "FAQ answer"
          },
          "frequency": {
            "type": "integer",
            "description": "Number of times FAQ was accessed"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "FAQ creation timestamp"
          }
        },
        "required": ["question", "answer", "frequency", "timestamp"]
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "description": "Chatbot response with admission information"
          }
        },
        "required": ["response"]
      },
      "FuzzySearchResult": {
        "type": "object",
        "properties": {
          "program": {
            "type": "string",
            "description": "Program name"
          },
          "score": {
            "type": "number",
            "description": "Match confidence score (lower is better)"
          }
        },
        "required": ["program", "score"]
      },
      "FuzzySearchTestResponse": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Original search query"
          },
          "fuzzyResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FuzzySearchResult"
            },
            "description": "Fuzzy search results"
          },
          "extractedProgram": {
            "type": "string",
            "nullable": true,
            "description": "Best extracted program name"
          },
          "suggestions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Program suggestions for ambiguous queries"
          },
          "isAdmissionQuery": {
            "type": "boolean",
            "description": "Whether query is admission-related"
          },
          "nonAdmissionResponse": {
            "type": "string",
            "nullable": true,
            "description": "Hardcoded response for non-admission queries"
          }
        },
        "required": ["query", "fuzzyResults", "extractedProgram", "suggestions", "isAdmissionQuery", "nonAdmissionResponse"]
      },
      "ChatMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "User message to the chatbot",
            "example": "What is the cut off for BSc Computer Science?"
          },
          "sender": {
            "type": "string",
            "description": "Message sender identifier",
            "example": "user"
          }
        },
        "required": ["message", "sender"]
      }
    }
  },
  "paths": {
    "/signup": {
      "post": {
        "summary": "Create a new user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": ["email", "password", "firstName", "lastName"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/signin": {
      "post": {
        "summary": "Sign in a user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign-in successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/forgot-password": {
      "post": {
        "summary": "Request a password reset link",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset link sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reset-password": {
      "post": {
        "summary": "Reset user password",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oobCode": {
                    "type": "string",
                    "description": "One-time password reset code"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "New password"
                  }
                },
                "required": ["oobCode", "newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/chat": {
      "post": {
        "summary": "Enhanced Chat with KNUST Admissions Assistant",
        "description": "Chat endpoint with fuzzy search, dataset-scoped responses, and intelligent program matching. Features include: automatic program name extraction, fuzzy search for typos, dataset-only responses for admission queries, eligibility checking, and similar program recommendations.",
        "tags": ["Chat"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatMessage"
              },
              "examples": {
                "cut-off-query": {
                  "summary": "Cut-off point query",
                  "value": {
                    "message": "What is the cut off for BSc Computer Science?",
                    "sender": "user"
                  }
                },
                "fuzzy-search": {
                  "summary": "Fuzzy search example",
                  "value": {
                    "message": "Tell me about petroleum engineering fees",
                    "sender": "user"
                  }
                },
                "eligibility-check": {
                  "summary": "Eligibility checking",
                  "value": {
                    "message": "Can I pursue Computer Science with General Arts background?",
                    "sender": "user"
                  }
                },
                "similarity-query": {
                  "summary": "Similar programs query",
                  "value": {
                    "message": "Programs similar to BSc Civil Engineering",
                    "sender": "user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Enhanced chat response with dataset-scoped information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                },
                "examples": {
                  "dataset-response": {
                    "summary": "Dataset-only response",
                    "value": {
                      "response": "**BSc Computer Science**\\n\\n🎯 **Cut-off Point:** 7\\n🏫 **College:** College of Science\\n\\n📚 **Required SHS Subjects:**\\n• Physics\\n• Mathematics\\n• Choose one: Chemistry OR Applied Electricity OR Electronics"
                    }
                  },
                  "multiple-suggestions": {
                    "summary": "Multiple program suggestions",
                    "value": {
                      "response": "I found multiple programs that might match your query. Did you mean one of these?\\n\\n1. BSc Computer Science\\n2. BSc Computer Engineering\\n\\nPlease specify which program you're interested in."
                    }
                  },
                  "eligibility-response": {
                    "summary": "Eligibility check with requirements",
                    "value": {
                      "response": "Unfortunately, BSc Computer Science requires specific science subjects that are typically not available in General Arts.\\n\\n📋 **BSc Computer Science - Admission Details:**\\n🎯 **Cut-off Point:** 7\\n🏫 **College:** College of Science\\n📚 **Required SHS Subjects:**\\n• Physics\\n• Mathematics\\n• Choose one: Chemistry OR Applied Electricity OR Electronics"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error with helpful fallback message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/programs": {
      "get": {
        "summary": "Get all programs",
        "tags": ["Programs"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of programs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Program"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "No programs found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/programs/search": {
      "get": {
        "summary": "Search programs by query or college",
        "tags": ["Programs"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "Program name search query"
          },
          {
            "in": "query",
            "name": "college",
            "schema": {
              "type": "string"
            },
            "description": "College name filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered programs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Program"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "No programs match criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/recommend": {
      "post": {
        "summary": "Get program recommendations based on grades",
        "tags": ["Recommendations"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "grades": {
                    "$ref": "#/components/schemas/Grades"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["male", "female"],
                    "description": "Gender for cut-off filtering"
                  }
                },
                "required": ["grades"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Program recommendations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recommendation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid grades format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calculate-aggregate": {
      "post": {
        "summary": "Calculate aggregate score from grades",
        "tags": ["Recommendations"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "grades": {
                    "$ref": "#/components/schemas/Grades"
                  }
                },
                "required": ["grades"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calculated aggregate",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "aggregate": {
                      "type": "integer",
                      "description": "Calculated aggregate score"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid grades format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/faqs": {
      "get": {
        "summary": "Get top FAQs",
        "tags": ["FAQs"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of FAQs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FAQ"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new FAQ",
        "tags": ["FAQs"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string"
                  },
                  "answer": {
                    "type": "string"
                  }
                },
                "required": ["question", "answer"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "FAQ created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "FAQ document ID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/faq/{id}": {
      "get": {
        "summary": "Get a specific FAQ",
        "tags": ["FAQs"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "FAQ document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "FAQ details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FAQ"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "FAQ not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an FAQ",
        "tags": ["FAQs"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "FAQ document ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string"
                  },
                  "answer": {
                    "type": "string"
                  }
                },
                "minProperties": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FAQ updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FAQ"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "FAQ not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an FAQ",
        "tags": ["FAQs"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "FAQ document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "FAQ deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Confirmation message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "FAQ not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/recommendations": {
      "get": {
        "summary": "Get user recommendations",
        "tags": ["Recommendations"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of user recommendations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recommendation"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "Server status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Server status"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Current timestamp"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/test-fuzzy-search/{query}": {
      "get": {
        "summary": "Test Fuzzy Search Functionality",
        "description": "Test endpoint to demonstrate fuzzy search, program extraction, and query classification. Useful for debugging and testing the enhanced chatbot capabilities.",
        "tags": ["Testing"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query to test",
            "examples": {
              "program-search": {
                "summary": "Program search",
                "value": "computer science"
              },
              "partial-name": {
                "summary": "Partial program name",
                "value": "petroleum"
              },
              "typo-example": {
                "summary": "Query with typos",
                "value": "civil eng"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fuzzy search test results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FuzzySearchTestResponse"
                },
                "examples": {
                  "successful-match": {
                    "summary": "Successful program match",
                    "value": {
                      "query": "computer science",
                      "fuzzyResults": [
                        {
                          "program": "BSc Computer Science",
                          "score": 0.156
                        },
                        {
                          "program": "BSc Computer Engineering",
                          "score": 0.548
                        }
                      ],
                      "extractedProgram": "BSc Computer Science",
                      "suggestions": [],
                      "isAdmissionQuery": true,
                      "nonAdmissionResponse": null
                    }
                  },
                  "multiple-suggestions": {
                    "summary": "Multiple program suggestions",
                    "value": {
                      "query": "engineering",
                      "fuzzyResults": [
                        {
                          "program": "BSc Civil Engineering",
                          "score": 0.156
                        },
                        {
                          "program": "BSc Chemical Engineering",
                          "score": 0.234
                        }
                      ],
                      "extractedProgram": null,
                      "suggestions": [
                        "BSc Civil Engineering",
                        "BSc Chemical Engineering",
                        "BSc Mechanical Engineering"
                      ],
                      "isAdmissionQuery": true,
                      "nonAdmissionResponse": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Test failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and account management endpoints"
    },
    {
      "name": "Chat",
      "description": "Enhanced chatbot endpoints with fuzzy search and dataset-scoped responses"
    },
    {
      "name": "Programs",
      "description": "KNUST program information and management"
    },
    {
      "name": "Recommendations",
      "description": "Program recommendations and eligibility checking"
    },
    {
      "name": "FAQs",
      "description": "Frequently asked questions management"
    },
    {
      "name": "Health",
      "description": "System health and status monitoring"
    },
    {
      "name": "Testing",
      "description": "Testing and debugging endpoints for development"
    }
  ]
}